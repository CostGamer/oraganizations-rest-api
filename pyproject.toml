[tool.poetry]
name = "org_catalog"
version = "0.1.0"
description = ""
authors = ["Vladimir <vladimirbryzgalov00@gmail.com>"]
package-mode = false


[tool.poetry.dependencies]
python = "^3.12"
sqlalchemy = "^2.0.36"
psycopg = "^3.2.3"
pydantic = "^2.10.4"
fastapi = "^0.115.6"
uvicorn = "^0.34.0"
python-json-logger = "^3.2.1"
alembic = "^1.14.0"
asyncio = "^3.4.3"
greenlet = "^3.1.1"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.0"
geoalchemy2 = "^0.16.0"
httpx = "^0.28.1"
dishka = "^1.6.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.14.0"
ruff = "^0.8.4"
black = "^24.10.0"
pre-commit = "^4.0.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
files = "src/, tests/"
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_untyped_defs = true


[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "B904",
    "E402",
]

[tool.pytest.ini_options]
testpaths = ["test"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
xfail_strict=true
filterwarnings = [
    "ignore::PendingDeprecationWarning",
]
